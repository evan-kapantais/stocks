[{"/Users/evangeloskapantais/Projects/Code/stocks/src/index.js":"1","/Users/evangeloskapantais/Projects/Code/stocks/src/App.js":"2","/Users/evangeloskapantais/Projects/Code/stocks/src/components/Stock.jsx":"3","/Users/evangeloskapantais/Projects/Code/stocks/src/components/Form.jsx":"4","/Users/evangeloskapantais/Projects/Code/stocks/src/data/stockData.js":"5","/Users/evangeloskapantais/Projects/Code/stocks/src/utils/placeholderData.js":"6","/Users/evangeloskapantais/Projects/Code/stocks/src/components/StockDetails.jsx":"7","/Users/evangeloskapantais/Projects/Code/stocks/src/components/Table.jsx":"8","/Users/evangeloskapantais/Projects/Code/stocks/src/components/Aside.jsx":"9","/Users/evangeloskapantais/Projects/Code/stocks/src/components/Popup.jsx":"10","/Users/evangeloskapantais/Projects/Code/stocks/src/server.js":"11","/Users/evangeloskapantais/Projects/Code/stocks/src/components/SearchResult.jsx":"12","/Users/evangeloskapantais/Projects/Code/stocks/src/context/GlobalContext.js":"13","/Users/evangeloskapantais/Projects/Code/stocks/src/context/ContextReducer.js":"14","/Users/evangeloskapantais/Projects/Code/stocks/src/components/Watchlist.jsx":"15","/Users/evangeloskapantais/Projects/Code/stocks/src/components/Portfolio.jsx":"16","/Users/evangeloskapantais/Projects/Code/stocks/src/utils/stockUtils.js":"17","/Users/evangeloskapantais/Projects/Code/stocks/src/components/Loader.jsx":"18","/Users/evangeloskapantais/Projects/Code/stocks/src/components/FullPortfolio.jsx":"19","/Users/evangeloskapantais/Projects/Code/stocks/src/components/PortfolioRow.jsx":"20","/Users/evangeloskapantais/Projects/Code/stocks/src/components/Navbar.jsx":"21","/Users/evangeloskapantais/Projects/Code/stocks/src/components/ApiTimer.jsx":"22"},{"size":290,"mtime":1609439509723,"results":"23","hashOfConfig":"24"},{"size":807,"mtime":1610967041421,"results":"25","hashOfConfig":"24"},{"size":1773,"mtime":1611254173529,"results":"26","hashOfConfig":"24"},{"size":1789,"mtime":1611311164110,"results":"27","hashOfConfig":"24"},{"size":1714,"mtime":1609417318543,"results":"28","hashOfConfig":"24"},{"size":2089,"mtime":1608560247864,"results":"29","hashOfConfig":"24"},{"size":5993,"mtime":1610905462701,"results":"30","hashOfConfig":"24"},{"size":349,"mtime":1609333513665,"results":"31","hashOfConfig":"24"},{"size":470,"mtime":1611253763755,"results":"32","hashOfConfig":"24"},{"size":423,"mtime":1609415473191,"results":"33","hashOfConfig":"24"},{"size":691,"mtime":1610916822996,"results":"34","hashOfConfig":"24"},{"size":2594,"mtime":1611312171419,"results":"35","hashOfConfig":"24"},{"size":4958,"mtime":1610966487957,"results":"36","hashOfConfig":"24"},{"size":1050,"mtime":1610920604097,"results":"37","hashOfConfig":"24"},{"size":806,"mtime":1611145179928,"results":"38","hashOfConfig":"24"},{"size":961,"mtime":1611145225562,"results":"39","hashOfConfig":"24"},{"size":2060,"mtime":1610913219041,"results":"40","hashOfConfig":"24"},{"size":138,"mtime":1610569438825,"results":"41","hashOfConfig":"24"},{"size":2783,"mtime":1610902581151,"results":"42","hashOfConfig":"24"},{"size":765,"mtime":1610830623308,"results":"43","hashOfConfig":"24"},{"size":508,"mtime":1610901256735,"results":"44","hashOfConfig":"24"},{"size":545,"mtime":1610966497990,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"13iu9do",{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/evangeloskapantais/Projects/Code/stocks/src/index.js",[],["100","101"],"/Users/evangeloskapantais/Projects/Code/stocks/src/App.js",["102"],"import { useEffect, useContext } from 'react';\nimport './App.scss';\nimport Form from './components/Form';\nimport StockDetails from './components/StockDetails';\nimport Aside from './components/Aside';\nimport Popup from './components/Popup';\nimport FullPortfolio from './components/FullPortfolio';\nimport { GlobalContext } from './context/GlobalContext';\nimport Navbar from './components/Navbar';\n\nfunction App() {\n\tconst { getDbStocks, display } = useContext(GlobalContext);\n\n\tuseEffect(() => {\n\t\tgetDbStocks();\n\t}, []);\n\n\treturn (\n\t\t<div className='App'>\n\t\t\t<Navbar />\n\t\t\t<Popup />\n\t\t\t<Aside />\n\t\t\t<section>\n\t\t\t\t{display.type === 'form' && <Form />}\n\t\t\t\t{display.type === 'stock' && <StockDetails />}\n\t\t\t\t{display.type === 'portfolio' && <FullPortfolio />}\n\t\t\t</section>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","/Users/evangeloskapantais/Projects/Code/stocks/src/components/Stock.jsx",[],"/Users/evangeloskapantais/Projects/Code/stocks/src/components/Form.jsx",[],"/Users/evangeloskapantais/Projects/Code/stocks/src/data/stockData.js",[],["103","104"],"/Users/evangeloskapantais/Projects/Code/stocks/src/utils/placeholderData.js",[],["105","106"],"/Users/evangeloskapantais/Projects/Code/stocks/src/components/StockDetails.jsx",["107"],"import { useContext, useEffect, useState } from 'react';\nimport { GlobalContext } from '../context/GlobalContext';\nimport Loader from './Loader';\nimport apartment from '../icons/apartment-black-18dp.svg';\nimport map from '../icons/map-black-18dp.svg';\nimport group from '../icons/group-black-18dp.svg';\n\nconst StockDetails = () => {\n\t// Fetch controls\n\tconst abortController = new AbortController();\n\tconst signal = abortController.signal;\n\n\t// State\n\tconst [stock, setStock] = useState(null);\n\tconst [isPending, setIsPending] = useState(true);\n\tconst [viewFullDescription, setViewFullDescription] = useState(false);\n\n\t// Context\n\tconst { display, fetchStockQuote, getDbStocks } = useContext(GlobalContext);\n\n\tuseEffect(() => {\n\t\tif (display.stock.quote) {\n\t\t\tsetStock(display.stock);\n\t\t\tsetIsPending(false);\n\t\t} else {\n\t\t\tfetchStockQuote(display.stock.overview.symbol, {\n\t\t\t\tsignal,\n\t\t\t}).then((res) => {\n\t\t\t\tsetStock(res);\n\t\t\t\tsetIsPending(false);\n\t\t\t\tgetDbStocks();\n\t\t\t});\n\t\t}\n\n\t\t// const date = new Date();\n\t\t// const latestUpdate = new Date(display.stock.quote.latestUpdate).getTime();\n\t\t// const now = date.getTime();\n\t\t// const updateMargin = 300000;\n\t\t// const timeToUpdate = now - latestUpdate > updateMargin;\n\t\t// const isWeekend = date.getDay() === 0 || date.getDay() === 6;\n\n\t\t// console.log(`Latest Update: ${latestUpdate.toLocaleString()}`);\n\t\t// console.log(`Now: ${now.toLocaleString()}`);\n\t\t// console.log(`Time Difference: ${(now - latestUpdate).toLocaleString()}`);\n\t\t// console.log(`Update Margin: ${updateMargin.toLocaleString()}`);\n\t\t// console.log(`Time to Update: ${timeToUpdate}`);\n\t\t// isWeekend && console.log(\"it's the weekend\");\n\n\t\treturn () => {\n\t\t\tabortController.abort();\n\t\t};\n\t}, [display.stock]);\n\n\tlet summary;\n\n\tif (display.stock.overview.description) {\n\t\tsummary = `${display.stock.overview.description.slice(0, 1000)}...`;\n\t}\n\n\t// console.log(\n\t// \t`${display.stock.overview.symbol} last updated on ${new Date(\n\t// \t\tdisplay.stock.quote.latestUpdate\n\t// \t)}.`\n\t// );\n\n\treturn (\n\t\t<div\n\t\t\tid='stock-preview-wrapper'\n\t\t\tclassName={`${isPending ? 'center-loader' : ''}`}\n\t\t>\n\t\t\t{isPending && <Loader />}\n\t\t\t{!isPending && (\n\t\t\t\t<>\n\t\t\t\t\t<header>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>{display.stock.overview.symbol}</h1>\n\t\t\t\t\t\t\t<h2>{display.stock.overview.name}</h2>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</header>\n\t\t\t\t\t<main className='details-main'>\n\t\t\t\t\t\t<section className='financials'>\n\t\t\t\t\t\t\t<h2 className='section-heading'>Financial Data</h2>\n\t\t\t\t\t\t\t<div className='quote-price'>\n\t\t\t\t\t\t\t\t<p className='stock-price'>\n\t\t\t\t\t\t\t\t\t<b>$ {Number(stock.quote.price).toFixed(2)}</b>\n\t\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\t\tclassName={`stock-change ${\n\t\t\t\t\t\t\t\t\t\t\tstock.quote.changePercent > 0\n\t\t\t\t\t\t\t\t\t\t\t\t? 'positive-change'\n\t\t\t\t\t\t\t\t\t\t\t\t: 'negative-change'\n\t\t\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{stock.quote.changePercent > 0 ? '↑' : '↓'}\n\t\t\t\t\t\t\t\t\t\t{stock.quote.changePercent.toFixed(3)} %\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t<i className='stock-day'>\n\t\t\t\t\t\t\t\t\tLatest trading day:{' '}\n\t\t\t\t\t\t\t\t\t{new Date(stock.quote.latestTradingDay).toLocaleDateString()}\n\t\t\t\t\t\t\t\t</i>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='tables-container'>\n\t\t\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<th>Quote</th>\n\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<td>High</td>\n\t\t\t\t\t\t\t\t\t\t\t<td>$ {stock.quote.high}</td>\n\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<td>Low</td>\n\t\t\t\t\t\t\t\t\t\t\t<td>$ {stock.quote.low}</td>\n\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<td>Previous Close</td>\n\t\t\t\t\t\t\t\t\t\t\t<td>$ {stock.quote.previousClose}</td>\n\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<td>Change</td>\n\t\t\t\t\t\t\t\t\t\t\t<td>$ {stock.quote.change}</td>\n\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<td>% Change</td>\n\t\t\t\t\t\t\t\t\t\t\t<td>{stock.quote.changePercent}</td>\n\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t\t{stock.overview.assetType === 'Common Stock' && (\n\t\t\t\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t<th>Key Info</th>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>Exchange</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{stock.overview.exchange}</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<abbr title='Price / Earnings Ratio'>P/E Ratio</abbr>\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{stock.overview.peRatio === 'NaN'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? 'None'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: stock.overview.peRatio}\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<abbr title='Price / Book Ratio'>P/B Ratio</abbr>\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{stock.overview.pbRatio}</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>52 Week High</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>$ {stock.overview.yearHigh}</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>52 Week Low</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>$ {stock.overview.yearLow}</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t\t{display.stock.overview.assetType === 'Common Stock' && (\n\t\t\t\t\t\t\t<section className='overview'>\n\t\t\t\t\t\t\t\t<h2 className='section-heading'>Overview</h2>\n\t\t\t\t\t\t\t\t<div id='company-meta'>\n\t\t\t\t\t\t\t\t\t<div className='overview-row'>\n\t\t\t\t\t\t\t\t\t\t<img src={apartment} alt='' />\n\t\t\t\t\t\t\t\t\t\t<p>{display.stock.overview.industry}</p>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className='overview-row'>\n\t\t\t\t\t\t\t\t\t\t<img src={map} alt='' />\n\t\t\t\t\t\t\t\t\t\t<address>{display.stock.overview.address}</address>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className='overview-row'>\n\t\t\t\t\t\t\t\t\t\t<img src={group} alt='' />\n\t\t\t\t\t\t\t\t\t\t<p>{display.stock.overview.employees} employees</p>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<p id='company-description'>\n\t\t\t\t\t\t\t\t\t{viewFullDescription\n\t\t\t\t\t\t\t\t\t\t? display.stock.overview.description\n\t\t\t\t\t\t\t\t\t\t: summary}\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\t\t\t\t\tclassName='text-button'\n\t\t\t\t\t\t\t\t\t\tonClick={() => setViewFullDescription(!viewFullDescription)}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tView {viewFullDescription ? 'Less' : 'More'}\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</section>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</main>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default StockDetails;\n","/Users/evangeloskapantais/Projects/Code/stocks/src/components/Table.jsx",[],["108","109"],"/Users/evangeloskapantais/Projects/Code/stocks/src/components/Aside.jsx",[],"/Users/evangeloskapantais/Projects/Code/stocks/src/components/Popup.jsx",[],"/Users/evangeloskapantais/Projects/Code/stocks/src/server.js",[],"/Users/evangeloskapantais/Projects/Code/stocks/src/components/SearchResult.jsx",[],"/Users/evangeloskapantais/Projects/Code/stocks/src/context/GlobalContext.js",["110"],"import React, { createContext, useReducer } from 'react';\nimport ContextReducer from './ContextReducer';\nimport stocksService from '../server';\nimport { formatStockOverview, formatStockQuote } from '../utils/stockUtils';\n\nconst initialState = {\n\tstocks: [],\n\tmessage: {\n\t\tisActive: false,\n\t\ttype: '',\n\t\ttext: '',\n\t},\n\tdisplay: { type: 'form', stock: {} },\n\tapiCalls: 0,\n};\n\nexport const GlobalContext = createContext(initialState);\n\nexport const GlobalProvider = ({ children }) => {\n\tconst [state, dispatch] = useReducer(ContextReducer, initialState);\n\n\tconst setDisplay = (display = 'form', stock = {}) => {\n\t\tdispatch({\n\t\t\ttype: 'SET_DISPLAY',\n\t\t\tpayload: { display, stock },\n\t\t});\n\t};\n\n\tconst incrementApiCalls = () => {\n\t\tdispatch({\n\t\t\ttype: 'INCREMENT_API_CALLS',\n\t\t\tpayload: state.apiCalls,\n\t\t});\n\t};\n\n\tconst getDbStocks = () => {\n\t\tstocksService\n\t\t\t.getAllStocks()\n\t\t\t.then((stocks) => {\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: 'GET_DB_STOCKS',\n\t\t\t\t\tpayload: stocks,\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch((error) => console.error(error.message));\n\t};\n\n\tconst fetchSymbolMatches = (symbol) => {\n\t\tconst matchesApi = `https://www.alphavantage.co/query?function=SYMBOL_SEARCH&keywords=${symbol}&apikey=${process.env.REACT_APP_API_KEY}`;\n\n\t\treturn fetch(matchesApi)\n\t\t\t.then((response) => response.json())\n\t\t\t.catch((error) => console.error(error.message));\n\t};\n\n\tconst fetchStockOverview = (symbol) => {\n\t\tconsole.log(`Context: Fetching ${symbol} overview.`);\n\t\tconst infoApi = `https://www.alphavantage.co/query?function=OVERVIEW&symbol=${symbol}&apikey=${process.env.REACT_APP_API_KEY}`;\n\n\t\treturn fetch(infoApi)\n\t\t\t.then((response) => response.json())\n\t\t\t.then((overview) => formatStockOverview(overview))\n\t\t\t.catch((error) => console.error(error.message));\n\t};\n\n\tconst fetchStockQuote = (symbol) => {\n\t\tconsole.log(`Context: Fetching ${symbol} quote.`);\n\n\t\tconst quoteApi = `https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol=${symbol}&apikey=${process.env.REACT_APP_API_KEY}`;\n\n\t\tconst foundStock = state.stocks.find(\n\t\t\t(item) => item.overview.symbol === symbol\n\t\t);\n\n\t\treturn fetch(quoteApi)\n\t\t\t.then((response) => response.json())\n\t\t\t.then((quote) => {\n\t\t\t\tconst formattedQuote = formatStockQuote(quote);\n\t\t\t\tconst updatedStock = { ...foundStock, quote: { ...formattedQuote } };\n\t\t\t\treturn stocksService.updateStock(foundStock.id, updatedStock);\n\t\t\t})\n\t\t\t.catch((error) => console.error(error.message));\n\t};\n\n\tconst addFundToWatchlist = (symbol, name, type, amount, price) => {\n\t\tconsole.log(`Context: Fetching ${symbol}(fund) quote.`);\n\n\t\tconst quoteApi = `https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol=${symbol}&apikey=${process.env.REACT_APP_API_KEY}`;\n\n\t\treturn fetch(quoteApi)\n\t\t\t.then((res) => res.json())\n\t\t\t.then((quote) => formatStockQuote(quote))\n\t\t\t.then((formatted) => {\n\t\t\t\tconst fund = {\n\t\t\t\t\toverview: {\n\t\t\t\t\t\tassetType: type,\n\t\t\t\t\t\tsymbol,\n\t\t\t\t\t\tname,\n\t\t\t\t\t},\n\t\t\t\t\tquote: { ...formatted },\n\t\t\t\t};\n\n\t\t\t\tif (amount > 0 && price > 0) {\n\t\t\t\t\tfund.portfolio = { amountHeld: amount, purchasePrice: price };\n\t\t\t\t}\n\n\t\t\t\treturn stocksService.postStock(fund);\n\t\t\t})\n\t\t\t.then((storedFund) => {\n\t\t\t\tdispatch({ type: 'ADD_TO_WATCHLIST', payload: storedFund });\n\t\t\t})\n\t\t\t.catch((error) => console.error(error));\n\t};\n\n\tconst addStockToWatchlist = (symbol, amount, price) => {\n\t\tfetchStockOverview(symbol)\n\t\t\t.then((overview) => {\n\t\t\t\tconst newStock = {\n\t\t\t\t\toverview: { ...overview },\n\t\t\t\t};\n\n\t\t\t\tif (amount) {\n\t\t\t\t\tnewStock.portfolio = {\n\t\t\t\t\t\tamountHeld: amount,\n\t\t\t\t\t\tpurchasePrice: price,\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\treturn stocksService.postStock(newStock);\n\t\t\t})\n\t\t\t.then((storedStock) =>\n\t\t\t\tdispatch({ type: 'ADD_TO_WATCHLIST', payload: storedStock })\n\t\t\t)\n\t\t\t.catch((error) => console.error(error.message));\n\t};\n\n\tconst addToWatchlist = (symbol, name, type, amount, price) => {\n\t\tif (state.stocks.find((stock) => stock.overview.symbol === symbol)) {\n\t\t\treturn setMessage('error', 'Stock already in your watchlist');\n\t\t}\n\n\t\tswitch (type) {\n\t\t\tcase 'Mutual Fund':\n\t\t\tcase 'ETF':\n\t\t\t\taddFundToWatchlist(symbol, name, type, amount, price);\n\t\t\t\tbreak;\n\t\t\tcase 'Equity':\n\t\t\tdefault:\n\t\t\t\taddStockToWatchlist(symbol, amount, price);\n\t\t}\n\t};\n\n\tconst deleteDbStock = (id) => {\n\t\tstocksService\n\t\t\t.deleteStock(id)\n\t\t\t.then((result) => {\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: 'DELETE_DB_STOCK',\n\t\t\t\t\tpayload: result.removedStock.id,\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch((error) => console.error(error));\n\t};\n\n\tconst setMessage = (type, text) => {\n\t\tdispatch({\n\t\t\ttype: 'SET_MESSAGE',\n\t\t\tpayload: { type, text },\n\t\t});\n\n\t\tsetTimeout(() => {\n\t\t\tdispatch({\n\t\t\t\ttype: 'RESET_MESSAGE',\n\t\t\t});\n\t\t}, 4000);\n\t};\n\n\treturn (\n\t\t<GlobalContext.Provider\n\t\t\tvalue={{\n\t\t\t\tstocks: state.stocks,\n\t\t\t\tmessage: state.message,\n\t\t\t\tdisplay: state.display,\n\t\t\t\tapiCalls: state.apiCalls,\n\t\t\t\tsetDisplay,\n\t\t\t\tfetchSymbolMatches,\n\t\t\t\tfetchStockOverview,\n\t\t\t\tfetchStockQuote,\n\t\t\t\taddToWatchlist,\n\t\t\t\tdeleteDbStock,\n\t\t\t\tsetMessage,\n\t\t\t\tgetDbStocks,\n\t\t\t}}\n\t\t>\n\t\t\t{children}\n\t\t</GlobalContext.Provider>\n\t);\n};\n","/Users/evangeloskapantais/Projects/Code/stocks/src/context/ContextReducer.js",[],"/Users/evangeloskapantais/Projects/Code/stocks/src/components/Watchlist.jsx",["111"],"import { useContext, useEffect } from 'react';\nimport { GlobalContext } from '../context/GlobalContext';\nimport Stock from './Stock';\n\nconst Watchlist = () => {\n\tconst { stocks, setDisplay } = useContext(GlobalContext);\n\n\tconst watchlist = stocks.filter((stock) => !stock.portfolio);\n\n\tuseEffect(() => {\n\t\tstocks.length === 0 && setDisplay('form');\n\t}, [stocks]);\n\n\treturn (\n\t\t<details id='watchlist' open>\n\t\t\t<summary>\n\t\t\t\t<span role='img' className='summary-icon'>\n\t\t\t\t\t►\n\t\t\t\t</span>\n\t\t\t\t<h2>Watchlist</h2>\n\t\t\t</summary>\n\t\t\t<ul>\n\t\t\t\t{!stocks && <p>Loading your watchlist...</p>}\n\t\t\t\t{watchlist &&\n\t\t\t\t\twatchlist.map((stock) => (\n\t\t\t\t\t\t<Stock\n\t\t\t\t\t\t\tkey={stock.overview.symbol}\n\t\t\t\t\t\t\tstock={stock}\n\t\t\t\t\t\t\ttype='watchlist-stock'\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t</ul>\n\t\t</details>\n\t);\n};\n\nexport default Watchlist;\n","/Users/evangeloskapantais/Projects/Code/stocks/src/components/Portfolio.jsx",["112"],"import { useContext, useEffect } from 'react';\nimport Stock from './Stock';\nimport { GlobalContext } from '../context/GlobalContext';\n\nconst Portfolio = (props) => {\n\tconst { stocks, setDisplay } = useContext(GlobalContext);\n\n\tconst portfolio = stocks.filter((stock) => stock.portfolio);\n\n\tuseEffect(() => {\n\t\tstocks.length === 0 && setDisplay('form');\n\t}, [stocks]);\n\n\treturn (\n\t\t<details id='portfolio' open>\n\t\t\t<summary>\n\t\t\t\t<div>\n\t\t\t\t\t<span role='img' className='summary-icon'>\n\t\t\t\t\t\t►\n\t\t\t\t\t</span>\n\t\t\t\t\t<h2>Portfolio</h2>\n\t\t\t\t</div>\n\t\t\t\t<button\n\t\t\t\t\ttype='button'\n\t\t\t\t\tclassName='text-button'\n\t\t\t\t\tonClick={() => setDisplay('portfolio')}\n\t\t\t\t>\n\t\t\t\t\tView Full Portfolio\n\t\t\t\t</button>\n\t\t\t</summary>\n\t\t\t<ul>\n\t\t\t\t{!stocks && <p>Loading your portfolio...</p>}\n\t\t\t\t{portfolio.map((stock) => (\n\t\t\t\t\t<Stock\n\t\t\t\t\t\tkey={stock.overview.symbol}\n\t\t\t\t\t\tstock={stock}\n\t\t\t\t\t\ttype='portfolio-stock'\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t</details>\n\t);\n};\n\nexport default Portfolio;\n","/Users/evangeloskapantais/Projects/Code/stocks/src/utils/stockUtils.js",[],"/Users/evangeloskapantais/Projects/Code/stocks/src/components/Loader.jsx",[],"/Users/evangeloskapantais/Projects/Code/stocks/src/components/FullPortfolio.jsx",["113"],"import React, { useContext, useEffect } from 'react';\nimport { GlobalContext } from '../context/GlobalContext';\nimport PortfolioRow from './PortfolioRow';\nimport {\n\tcalculateTotalShares,\n\tcalculateTotalInitialValue,\n\tcalculateTotalCurrentValue,\n\tcalculateTotalGain,\n\tcalculateTotalPercentGain,\n} from '../utils/stockUtils';\n\nconst FullPortfolio = () => {\n\t// Context\n\tconst { stocks, fetchStockQuote, getDbStocks } = useContext(GlobalContext);\n\n\t// Portfolio filter\n\tconst portfolio = stocks.filter((stock) => stock.portfolio);\n\n\t// Init\n\tuseEffect(() => {\n\t\tportfolio.forEach((portfolioStock) => {\n\t\t\tif (!portfolioStock.quote) {\n\t\t\t\tfetchStockQuote(portfolioStock.overview.symbol).then(() =>\n\t\t\t\t\tgetDbStocks()\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t}, [stocks]);\n\n\t// Get values\n\n\tconst totalPositions = portfolio.length;\n\tconst totalShares = calculateTotalShares(portfolio);\n\tconst totalInitialValue = calculateTotalInitialValue(portfolio).toFixed(2);\n\tconst totalCurrentValue = calculateTotalCurrentValue(portfolio).toFixed(2);\n\tconst totalGain = calculateTotalGain(portfolio).toFixed(2);\n\tconst totalPercentGain = calculateTotalPercentGain(portfolio).toFixed(2);\n\n\treturn (\n\t\t<div className='portfolio-wrapper'>\n\t\t\t<h2 className='display-heading'>Portfolio</h2>\n\t\t\t<div>\n\t\t\t\t<header></header>\n\t\t\t\t<main>\n\t\t\t\t\t<h2 className='portfolio-heading'>Breakdown</h2>\n\t\t\t\t\t<table className='portfolio-table'>\n\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th>Symbol</th>\n\t\t\t\t\t\t\t\t<th>Shares</th>\n\t\t\t\t\t\t\t\t<th>Buy Price</th>\n\t\t\t\t\t\t\t\t<th>Current Price</th>\n\t\t\t\t\t\t\t\t<th>Gain</th>\n\t\t\t\t\t\t\t\t<th>% Gain</th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t{portfolio.map((stock) => (\n\t\t\t\t\t\t\t\t<PortfolioRow key={stock.overview.symbol} stock={stock} />\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</table>\n\t\t\t\t\t<h2 className='portfolio-heading'>Overview</h2>\n\t\t\t\t\t<table className='portfolio-table'>\n\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th>Positions</th>\n\t\t\t\t\t\t\t\t<th>Shares</th>\n\t\t\t\t\t\t\t\t<th>Initial Value</th>\n\t\t\t\t\t\t\t\t<th>Current Value</th>\n\t\t\t\t\t\t\t\t<th>Gain</th>\n\t\t\t\t\t\t\t\t<th>% Gain</th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>{totalPositions}</td>\n\t\t\t\t\t\t\t\t<td>{totalShares}</td>\n\t\t\t\t\t\t\t\t<td>$ {totalInitialValue}</td>\n\t\t\t\t\t\t\t\t<td>$ {totalCurrentValue}</td>\n\t\t\t\t\t\t\t\t<td\n\t\t\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\t\ttotalGain === 0\n\t\t\t\t\t\t\t\t\t\t\t? ''\n\t\t\t\t\t\t\t\t\t\t\t: totalGain > 0\n\t\t\t\t\t\t\t\t\t\t\t? 'positive-change'\n\t\t\t\t\t\t\t\t\t\t\t: 'negative-change'\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t$ {totalGain}\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td\n\t\t\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\t\ttotalGain === 0\n\t\t\t\t\t\t\t\t\t\t\t? ''\n\t\t\t\t\t\t\t\t\t\t\t: totalGain > 0\n\t\t\t\t\t\t\t\t\t\t\t? 'positive-change'\n\t\t\t\t\t\t\t\t\t\t\t: 'negative-change'\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{totalPercentGain}\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</table>\n\t\t\t\t</main>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default FullPortfolio;\n","/Users/evangeloskapantais/Projects/Code/stocks/src/components/PortfolioRow.jsx",[],"/Users/evangeloskapantais/Projects/Code/stocks/src/components/Navbar.jsx",[],"/Users/evangeloskapantais/Projects/Code/stocks/src/components/ApiTimer.jsx",["114"],{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":16,"column":5,"nodeType":"121","endLine":16,"endColumn":7,"suggestions":"122"},{"ruleId":"115","replacedBy":"123"},{"ruleId":"117","replacedBy":"124"},{"ruleId":"115","replacedBy":"125"},{"ruleId":"117","replacedBy":"126"},{"ruleId":"119","severity":1,"message":"127","line":52,"column":5,"nodeType":"121","endLine":52,"endColumn":20,"suggestions":"128"},{"ruleId":"115","replacedBy":"129"},{"ruleId":"117","replacedBy":"130"},{"ruleId":"131","severity":1,"message":"132","line":29,"column":8,"nodeType":"133","messageId":"134","endLine":29,"endColumn":25},{"ruleId":"119","severity":1,"message":"135","line":12,"column":5,"nodeType":"121","endLine":12,"endColumn":13,"suggestions":"136"},{"ruleId":"119","severity":1,"message":"135","line":12,"column":5,"nodeType":"121","endLine":12,"endColumn":13,"suggestions":"137"},{"ruleId":"119","severity":1,"message":"138","line":28,"column":5,"nodeType":"121","endLine":28,"endColumn":13,"suggestions":"139"},{"ruleId":"119","severity":1,"message":"140","line":17,"column":5,"nodeType":"121","endLine":17,"endColumn":15,"suggestions":"141"},"no-native-reassign",["142"],"no-negated-in-lhs",["143"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getDbStocks'. Either include it or remove the dependency array.","ArrayExpression",["144"],["142"],["143"],["142"],["143"],"React Hook useEffect has missing dependencies: 'abortController', 'fetchStockQuote', 'getDbStocks', and 'signal'. Either include them or remove the dependency array.",["145"],["142"],["143"],"no-unused-vars","'incrementApiCalls' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'setDisplay'. Either include it or remove the dependency array.",["146"],["147"],"React Hook useEffect has missing dependencies: 'fetchStockQuote', 'getDbStocks', and 'portfolio'. Either include them or remove the dependency array.",["148"],"React Hook useEffect has a missing dependency: 'timer'. Either include it or remove the dependency array. You can also do a functional update 'setTimer(t => ...)' if you only need 'timer' in the 'setTimer' call.",["149"],"no-global-assign","no-unsafe-negation",{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},{"desc":"154","fix":"155"},{"desc":"154","fix":"156"},{"desc":"157","fix":"158"},{"desc":"159","fix":"160"},"Update the dependencies array to be: [getDbStocks]",{"range":"161","text":"162"},"Update the dependencies array to be: [abortController, display.stock, fetchStockQuote, getDbStocks, signal]",{"range":"163","text":"164"},"Update the dependencies array to be: [setDisplay, stocks]",{"range":"165","text":"166"},{"range":"167","text":"166"},"Update the dependencies array to be: [fetchStockQuote, getDbStocks, portfolio, stocks]",{"range":"168","text":"169"},"Update the dependencies array to be: [apiCalls, timer]",{"range":"170","text":"171"},[515,517],"[getDbStocks]",[1713,1728],"[abortController, display.stock, fetchStockQuote, getDbStocks, signal]",[353,361],"[setDisplay, stocks]",[357,365],[735,743],"[fetchStockQuote, getDbStocks, portfolio, stocks]",[400,410],"[apiCalls, timer]"]