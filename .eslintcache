[{"/Users/evangeloskapantais/Projects/Code/stocks/src/index.js":"1","/Users/evangeloskapantais/Projects/Code/stocks/src/App.js":"2","/Users/evangeloskapantais/Projects/Code/stocks/src/components/Stock.jsx":"3","/Users/evangeloskapantais/Projects/Code/stocks/src/components/Form.jsx":"4","/Users/evangeloskapantais/Projects/Code/stocks/src/data/stockData.js":"5","/Users/evangeloskapantais/Projects/Code/stocks/src/utils/placeholderData.js":"6","/Users/evangeloskapantais/Projects/Code/stocks/src/components/StockDetails.jsx":"7","/Users/evangeloskapantais/Projects/Code/stocks/src/components/Table.jsx":"8","/Users/evangeloskapantais/Projects/Code/stocks/src/components/Popup.jsx":"9","/Users/evangeloskapantais/Projects/Code/stocks/src/server.js":"10","/Users/evangeloskapantais/Projects/Code/stocks/src/components/SearchResult.jsx":"11","/Users/evangeloskapantais/Projects/Code/stocks/src/context/GlobalContext.js":"12","/Users/evangeloskapantais/Projects/Code/stocks/src/context/ContextReducer.js":"13","/Users/evangeloskapantais/Projects/Code/stocks/src/components/Watchlist.jsx":"14","/Users/evangeloskapantais/Projects/Code/stocks/src/components/Portfolio.jsx":"15","/Users/evangeloskapantais/Projects/Code/stocks/src/utils/stockUtils.js":"16","/Users/evangeloskapantais/Projects/Code/stocks/src/components/Loader.jsx":"17","/Users/evangeloskapantais/Projects/Code/stocks/src/components/FullPortfolio.jsx":"18","/Users/evangeloskapantais/Projects/Code/stocks/src/components/PortfolioRow.jsx":"19","/Users/evangeloskapantais/Projects/Code/stocks/src/components/Navbar.jsx":"20","/Users/evangeloskapantais/Projects/Code/stocks/src/components/ApiTimer.jsx":"21","/Users/evangeloskapantais/Projects/Code/stocks/src/components/Sidebar.jsx":"22","/Users/evangeloskapantais/Projects/Code/stocks/src/components/Content.jsx":"23","/Users/evangeloskapantais/Projects/Code/stocks/src/components/SidebarTrigger.jsx":"24","/Users/evangeloskapantais/Projects/Code/stocks/src/components/tables/QuoteTable.jsx":"25","/Users/evangeloskapantais/Projects/Code/stocks/src/components/tables/KeyDataTable.jsx":"26"},{"size":290,"mtime":1609439509723,"results":"27","hashOfConfig":"28"},{"size":539,"mtime":1611402665594,"results":"29","hashOfConfig":"28"},{"size":1773,"mtime":1611254173529,"results":"30","hashOfConfig":"28"},{"size":2141,"mtime":1611602802813,"results":"31","hashOfConfig":"28"},{"size":1714,"mtime":1609417318543,"results":"32","hashOfConfig":"28"},{"size":2089,"mtime":1608560247864,"results":"33","hashOfConfig":"28"},{"size":4166,"mtime":1611663423924,"results":"34","hashOfConfig":"28"},{"size":349,"mtime":1609333513665,"results":"35","hashOfConfig":"28"},{"size":423,"mtime":1609415473191,"results":"36","hashOfConfig":"28"},{"size":691,"mtime":1610916822996,"results":"37","hashOfConfig":"28"},{"size":1856,"mtime":1611569766868,"results":"38","hashOfConfig":"28"},{"size":4958,"mtime":1610966487957,"results":"39","hashOfConfig":"28"},{"size":1050,"mtime":1610920604097,"results":"40","hashOfConfig":"28"},{"size":806,"mtime":1611145179928,"results":"41","hashOfConfig":"28"},{"size":961,"mtime":1611145225562,"results":"42","hashOfConfig":"28"},{"size":2060,"mtime":1610913219041,"results":"43","hashOfConfig":"28"},{"size":138,"mtime":1610569438825,"results":"44","hashOfConfig":"28"},{"size":2783,"mtime":1610902581151,"results":"45","hashOfConfig":"28"},{"size":765,"mtime":1610830623308,"results":"46","hashOfConfig":"28"},{"size":508,"mtime":1610901256735,"results":"47","hashOfConfig":"28"},{"size":545,"mtime":1610966497990,"results":"48","hashOfConfig":"28"},{"size":483,"mtime":1611402592226,"results":"49","hashOfConfig":"28"},{"size":585,"mtime":1611402689394,"results":"50","hashOfConfig":"28"},{"size":590,"mtime":1611570843125,"results":"51","hashOfConfig":"28"},{"size":629,"mtime":1611661606705,"results":"52","hashOfConfig":"28"},{"size":829,"mtime":1611661683651,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"13iu9do",{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"56"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/evangeloskapantais/Projects/Code/stocks/src/index.js",[],["116","117"],"/Users/evangeloskapantais/Projects/Code/stocks/src/App.js",["118"],"import { useEffect, useContext } from 'react';\nimport Navbar from './components/Navbar';\nimport Sidebar from './components/Sidebar';\nimport Content from './components/Content';\nimport Popup from './components/Popup';\nimport { GlobalContext } from './context/GlobalContext';\nimport './App.scss';\n\nfunction App() {\n\tconst { getDbStocks } = useContext(GlobalContext);\n\n\tuseEffect(() => {\n\t\tgetDbStocks();\n\t}, []);\n\n\treturn (\n\t\t<div className='App'>\n\t\t\t<Navbar />\n\t\t\t<Popup />\n\t\t\t<Sidebar />\n\t\t\t<Content />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","/Users/evangeloskapantais/Projects/Code/stocks/src/components/Stock.jsx",[],"/Users/evangeloskapantais/Projects/Code/stocks/src/components/Form.jsx",["119"],"import { useState, useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalContext';\nimport SearchResult from './SearchResult';\n\nconst Form = () => {\n\tconst [searchMatches, setSearchMatches] = useState(null);\n\tconst [inputValue, setInputValue] = useState('');\n\n\tconst { fetchSymbolMatches, setMessage } = useContext(GlobalContext);\n\n\tconst fetchOptions = (e) => {\n\t\te.preventDefault();\n\n\t\tconst container = document.querySelector('.form-container');\n\n\t\tconst abortController = new AbortController();\n\t\tconst signal = abortController.signal;\n\n\t\tif (!inputValue) {\n\t\t\tsetMessage('error', 'Please provide a search symbol');\n\t\t\treturn;\n\t\t}\n\n\t\tsetMessage('success', 'Searching for matches...');\n\n\t\tfetchSymbolMatches(inputValue, { signal }).then((matches) => {\n\t\t\tif (matches.bestMatches.length === 0) {\n\t\t\t\tsetMessage('error', 'No matches found');\n\t\t\t} else {\n\t\t\t\tsetMessage('success', 'Matches fetched.');\n\t\t\t\tsetSearchMatches(matches.bestMatches);\n\t\t\t}\n\t\t});\n\n\t\tsetInputValue('');\n\t};\n\n\treturn (\n\t\t<div className='form-wrapper'>\n\t\t\t<h2 className='display-heading'>\n\t\t\t\t{!searchMatches ? 'Add New Stock' : 'Search Matches'}\n\t\t\t</h2>\n\t\t\t{!searchMatches && (\n\t\t\t\t<div className='form-container'>\n\t\t\t\t\t<form id='search-form' onSubmit={fetchOptions}>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype='search'\n\t\t\t\t\t\t\tplaceholder='Search stock symbol...'\n\t\t\t\t\t\t\tid='search-stock-input'\n\t\t\t\t\t\t\tvalue={inputValue}\n\t\t\t\t\t\t\tonChange={(e) => setInputValue(e.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<button type='submit' className='main-button'>\n\t\t\t\t\t\t\tSearch\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t{searchMatches && (\n\t\t\t\t<div id='search-matches'>\n\t\t\t\t\t<div id='matches-container'>\n\t\t\t\t\t\t{/* <p className='note'>\n\t\t\t\t\t\t\t<b>!</b> Select an item to add to your watchlist\n\t\t\t\t\t\t</p> */}\n\t\t\t\t\t\t<ul id='matches-grid'>\n\t\t\t\t\t\t\t{searchMatches?.map((match) => (\n\t\t\t\t\t\t\t\t<SearchResult key={match['1. symbol']} match={match} />\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\t\tclassName='main-button'\n\t\t\t\t\t\t\tonClick={() => setSearchMatches(null)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tNew Search\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default Form;\n","/Users/evangeloskapantais/Projects/Code/stocks/src/data/stockData.js",[],["120","121"],"/Users/evangeloskapantais/Projects/Code/stocks/src/utils/placeholderData.js",[],["122","123"],"/Users/evangeloskapantais/Projects/Code/stocks/src/components/StockDetails.jsx",["124"],"/Users/evangeloskapantais/Projects/Code/stocks/src/components/Table.jsx",[],["125","126"],"/Users/evangeloskapantais/Projects/Code/stocks/src/components/Popup.jsx",[],"/Users/evangeloskapantais/Projects/Code/stocks/src/server.js",[],"/Users/evangeloskapantais/Projects/Code/stocks/src/components/SearchResult.jsx",[],"/Users/evangeloskapantais/Projects/Code/stocks/src/context/GlobalContext.js",["127"],"import React, { createContext, useReducer } from 'react';\nimport ContextReducer from './ContextReducer';\nimport stocksService from '../server';\nimport { formatStockOverview, formatStockQuote } from '../utils/stockUtils';\n\nconst initialState = {\n\tstocks: [],\n\tmessage: {\n\t\tisActive: false,\n\t\ttype: '',\n\t\ttext: '',\n\t},\n\tdisplay: { type: 'form', stock: {} },\n\tapiCalls: 0,\n};\n\nexport const GlobalContext = createContext(initialState);\n\nexport const GlobalProvider = ({ children }) => {\n\tconst [state, dispatch] = useReducer(ContextReducer, initialState);\n\n\tconst setDisplay = (display = 'form', stock = {}) => {\n\t\tdispatch({\n\t\t\ttype: 'SET_DISPLAY',\n\t\t\tpayload: { display, stock },\n\t\t});\n\t};\n\n\tconst incrementApiCalls = () => {\n\t\tdispatch({\n\t\t\ttype: 'INCREMENT_API_CALLS',\n\t\t\tpayload: state.apiCalls,\n\t\t});\n\t};\n\n\tconst getDbStocks = () => {\n\t\tstocksService\n\t\t\t.getAllStocks()\n\t\t\t.then((stocks) => {\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: 'GET_DB_STOCKS',\n\t\t\t\t\tpayload: stocks,\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch((error) => console.error(error.message));\n\t};\n\n\tconst fetchSymbolMatches = (symbol) => {\n\t\tconst matchesApi = `https://www.alphavantage.co/query?function=SYMBOL_SEARCH&keywords=${symbol}&apikey=${process.env.REACT_APP_API_KEY}`;\n\n\t\treturn fetch(matchesApi)\n\t\t\t.then((response) => response.json())\n\t\t\t.catch((error) => console.error(error.message));\n\t};\n\n\tconst fetchStockOverview = (symbol) => {\n\t\tconsole.log(`Context: Fetching ${symbol} overview.`);\n\t\tconst infoApi = `https://www.alphavantage.co/query?function=OVERVIEW&symbol=${symbol}&apikey=${process.env.REACT_APP_API_KEY}`;\n\n\t\treturn fetch(infoApi)\n\t\t\t.then((response) => response.json())\n\t\t\t.then((overview) => formatStockOverview(overview))\n\t\t\t.catch((error) => console.error(error.message));\n\t};\n\n\tconst fetchStockQuote = (symbol) => {\n\t\tconsole.log(`Context: Fetching ${symbol} quote.`);\n\n\t\tconst quoteApi = `https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol=${symbol}&apikey=${process.env.REACT_APP_API_KEY}`;\n\n\t\tconst foundStock = state.stocks.find(\n\t\t\t(item) => item.overview.symbol === symbol\n\t\t);\n\n\t\treturn fetch(quoteApi)\n\t\t\t.then((response) => response.json())\n\t\t\t.then((quote) => {\n\t\t\t\tconst formattedQuote = formatStockQuote(quote);\n\t\t\t\tconst updatedStock = { ...foundStock, quote: { ...formattedQuote } };\n\t\t\t\treturn stocksService.updateStock(foundStock.id, updatedStock);\n\t\t\t})\n\t\t\t.catch((error) => console.error(error.message));\n\t};\n\n\tconst addFundToWatchlist = (symbol, name, type, amount, price) => {\n\t\tconsole.log(`Context: Fetching ${symbol}(fund) quote.`);\n\n\t\tconst quoteApi = `https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol=${symbol}&apikey=${process.env.REACT_APP_API_KEY}`;\n\n\t\treturn fetch(quoteApi)\n\t\t\t.then((res) => res.json())\n\t\t\t.then((quote) => formatStockQuote(quote))\n\t\t\t.then((formatted) => {\n\t\t\t\tconst fund = {\n\t\t\t\t\toverview: {\n\t\t\t\t\t\tassetType: type,\n\t\t\t\t\t\tsymbol,\n\t\t\t\t\t\tname,\n\t\t\t\t\t},\n\t\t\t\t\tquote: { ...formatted },\n\t\t\t\t};\n\n\t\t\t\tif (amount > 0 && price > 0) {\n\t\t\t\t\tfund.portfolio = { amountHeld: amount, purchasePrice: price };\n\t\t\t\t}\n\n\t\t\t\treturn stocksService.postStock(fund);\n\t\t\t})\n\t\t\t.then((storedFund) => {\n\t\t\t\tdispatch({ type: 'ADD_TO_WATCHLIST', payload: storedFund });\n\t\t\t})\n\t\t\t.catch((error) => console.error(error));\n\t};\n\n\tconst addStockToWatchlist = (symbol, amount, price) => {\n\t\tfetchStockOverview(symbol)\n\t\t\t.then((overview) => {\n\t\t\t\tconst newStock = {\n\t\t\t\t\toverview: { ...overview },\n\t\t\t\t};\n\n\t\t\t\tif (amount) {\n\t\t\t\t\tnewStock.portfolio = {\n\t\t\t\t\t\tamountHeld: amount,\n\t\t\t\t\t\tpurchasePrice: price,\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\treturn stocksService.postStock(newStock);\n\t\t\t})\n\t\t\t.then((storedStock) =>\n\t\t\t\tdispatch({ type: 'ADD_TO_WATCHLIST', payload: storedStock })\n\t\t\t)\n\t\t\t.catch((error) => console.error(error.message));\n\t};\n\n\tconst addToWatchlist = (symbol, name, type, amount, price) => {\n\t\tif (state.stocks.find((stock) => stock.overview.symbol === symbol)) {\n\t\t\treturn setMessage('error', 'Stock already in your watchlist');\n\t\t}\n\n\t\tswitch (type) {\n\t\t\tcase 'Mutual Fund':\n\t\t\tcase 'ETF':\n\t\t\t\taddFundToWatchlist(symbol, name, type, amount, price);\n\t\t\t\tbreak;\n\t\t\tcase 'Equity':\n\t\t\tdefault:\n\t\t\t\taddStockToWatchlist(symbol, amount, price);\n\t\t}\n\t};\n\n\tconst deleteDbStock = (id) => {\n\t\tstocksService\n\t\t\t.deleteStock(id)\n\t\t\t.then((result) => {\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: 'DELETE_DB_STOCK',\n\t\t\t\t\tpayload: result.removedStock.id,\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch((error) => console.error(error));\n\t};\n\n\tconst setMessage = (type, text) => {\n\t\tdispatch({\n\t\t\ttype: 'SET_MESSAGE',\n\t\t\tpayload: { type, text },\n\t\t});\n\n\t\tsetTimeout(() => {\n\t\t\tdispatch({\n\t\t\t\ttype: 'RESET_MESSAGE',\n\t\t\t});\n\t\t}, 4000);\n\t};\n\n\treturn (\n\t\t<GlobalContext.Provider\n\t\t\tvalue={{\n\t\t\t\tstocks: state.stocks,\n\t\t\t\tmessage: state.message,\n\t\t\t\tdisplay: state.display,\n\t\t\t\tapiCalls: state.apiCalls,\n\t\t\t\tsetDisplay,\n\t\t\t\tfetchSymbolMatches,\n\t\t\t\tfetchStockOverview,\n\t\t\t\tfetchStockQuote,\n\t\t\t\taddToWatchlist,\n\t\t\t\tdeleteDbStock,\n\t\t\t\tsetMessage,\n\t\t\t\tgetDbStocks,\n\t\t\t}}\n\t\t>\n\t\t\t{children}\n\t\t</GlobalContext.Provider>\n\t);\n};\n","/Users/evangeloskapantais/Projects/Code/stocks/src/context/ContextReducer.js",[],"/Users/evangeloskapantais/Projects/Code/stocks/src/components/Watchlist.jsx",["128"],"import { useContext, useEffect } from 'react';\nimport { GlobalContext } from '../context/GlobalContext';\nimport Stock from './Stock';\n\nconst Watchlist = () => {\n\tconst { stocks, setDisplay } = useContext(GlobalContext);\n\n\tconst watchlist = stocks.filter((stock) => !stock.portfolio);\n\n\tuseEffect(() => {\n\t\tstocks.length === 0 && setDisplay('form');\n\t}, [stocks]);\n\n\treturn (\n\t\t<details id='watchlist' open>\n\t\t\t<summary>\n\t\t\t\t<span role='img' className='summary-icon'>\n\t\t\t\t\t►\n\t\t\t\t</span>\n\t\t\t\t<h2>Watchlist</h2>\n\t\t\t</summary>\n\t\t\t<ul>\n\t\t\t\t{!stocks && <p>Loading your watchlist...</p>}\n\t\t\t\t{watchlist &&\n\t\t\t\t\twatchlist.map((stock) => (\n\t\t\t\t\t\t<Stock\n\t\t\t\t\t\t\tkey={stock.overview.symbol}\n\t\t\t\t\t\t\tstock={stock}\n\t\t\t\t\t\t\ttype='watchlist-stock'\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t</ul>\n\t\t</details>\n\t);\n};\n\nexport default Watchlist;\n","/Users/evangeloskapantais/Projects/Code/stocks/src/components/Portfolio.jsx",["129"],"import { useContext, useEffect } from 'react';\nimport Stock from './Stock';\nimport { GlobalContext } from '../context/GlobalContext';\n\nconst Portfolio = (props) => {\n\tconst { stocks, setDisplay } = useContext(GlobalContext);\n\n\tconst portfolio = stocks.filter((stock) => stock.portfolio);\n\n\tuseEffect(() => {\n\t\tstocks.length === 0 && setDisplay('form');\n\t}, [stocks]);\n\n\treturn (\n\t\t<details id='portfolio' open>\n\t\t\t<summary>\n\t\t\t\t<div>\n\t\t\t\t\t<span role='img' className='summary-icon'>\n\t\t\t\t\t\t►\n\t\t\t\t\t</span>\n\t\t\t\t\t<h2>Portfolio</h2>\n\t\t\t\t</div>\n\t\t\t\t<button\n\t\t\t\t\ttype='button'\n\t\t\t\t\tclassName='text-button'\n\t\t\t\t\tonClick={() => setDisplay('portfolio')}\n\t\t\t\t>\n\t\t\t\t\tView Full Portfolio\n\t\t\t\t</button>\n\t\t\t</summary>\n\t\t\t<ul>\n\t\t\t\t{!stocks && <p>Loading your portfolio...</p>}\n\t\t\t\t{portfolio.map((stock) => (\n\t\t\t\t\t<Stock\n\t\t\t\t\t\tkey={stock.overview.symbol}\n\t\t\t\t\t\tstock={stock}\n\t\t\t\t\t\ttype='portfolio-stock'\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t</details>\n\t);\n};\n\nexport default Portfolio;\n","/Users/evangeloskapantais/Projects/Code/stocks/src/utils/stockUtils.js",[],"/Users/evangeloskapantais/Projects/Code/stocks/src/components/Loader.jsx",[],"/Users/evangeloskapantais/Projects/Code/stocks/src/components/FullPortfolio.jsx",["130"],"import React, { useContext, useEffect } from 'react';\nimport { GlobalContext } from '../context/GlobalContext';\nimport PortfolioRow from './PortfolioRow';\nimport {\n\tcalculateTotalShares,\n\tcalculateTotalInitialValue,\n\tcalculateTotalCurrentValue,\n\tcalculateTotalGain,\n\tcalculateTotalPercentGain,\n} from '../utils/stockUtils';\n\nconst FullPortfolio = () => {\n\t// Context\n\tconst { stocks, fetchStockQuote, getDbStocks } = useContext(GlobalContext);\n\n\t// Portfolio filter\n\tconst portfolio = stocks.filter((stock) => stock.portfolio);\n\n\t// Init\n\tuseEffect(() => {\n\t\tportfolio.forEach((portfolioStock) => {\n\t\t\tif (!portfolioStock.quote) {\n\t\t\t\tfetchStockQuote(portfolioStock.overview.symbol).then(() =>\n\t\t\t\t\tgetDbStocks()\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t}, [stocks]);\n\n\t// Get values\n\n\tconst totalPositions = portfolio.length;\n\tconst totalShares = calculateTotalShares(portfolio);\n\tconst totalInitialValue = calculateTotalInitialValue(portfolio).toFixed(2);\n\tconst totalCurrentValue = calculateTotalCurrentValue(portfolio).toFixed(2);\n\tconst totalGain = calculateTotalGain(portfolio).toFixed(2);\n\tconst totalPercentGain = calculateTotalPercentGain(portfolio).toFixed(2);\n\n\treturn (\n\t\t<div className='portfolio-wrapper'>\n\t\t\t<h2 className='display-heading'>Portfolio</h2>\n\t\t\t<div>\n\t\t\t\t<header></header>\n\t\t\t\t<main>\n\t\t\t\t\t<h2 className='portfolio-heading'>Breakdown</h2>\n\t\t\t\t\t<table className='portfolio-table'>\n\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th>Symbol</th>\n\t\t\t\t\t\t\t\t<th>Shares</th>\n\t\t\t\t\t\t\t\t<th>Buy Price</th>\n\t\t\t\t\t\t\t\t<th>Current Price</th>\n\t\t\t\t\t\t\t\t<th>Gain</th>\n\t\t\t\t\t\t\t\t<th>% Gain</th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t{portfolio.map((stock) => (\n\t\t\t\t\t\t\t\t<PortfolioRow key={stock.overview.symbol} stock={stock} />\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</table>\n\t\t\t\t\t<h2 className='portfolio-heading'>Overview</h2>\n\t\t\t\t\t<table className='portfolio-table'>\n\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th>Positions</th>\n\t\t\t\t\t\t\t\t<th>Shares</th>\n\t\t\t\t\t\t\t\t<th>Initial Value</th>\n\t\t\t\t\t\t\t\t<th>Current Value</th>\n\t\t\t\t\t\t\t\t<th>Gain</th>\n\t\t\t\t\t\t\t\t<th>% Gain</th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>{totalPositions}</td>\n\t\t\t\t\t\t\t\t<td>{totalShares}</td>\n\t\t\t\t\t\t\t\t<td>$ {totalInitialValue}</td>\n\t\t\t\t\t\t\t\t<td>$ {totalCurrentValue}</td>\n\t\t\t\t\t\t\t\t<td\n\t\t\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\t\ttotalGain === 0\n\t\t\t\t\t\t\t\t\t\t\t? ''\n\t\t\t\t\t\t\t\t\t\t\t: totalGain > 0\n\t\t\t\t\t\t\t\t\t\t\t? 'positive-change'\n\t\t\t\t\t\t\t\t\t\t\t: 'negative-change'\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t$ {totalGain}\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td\n\t\t\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\t\ttotalGain === 0\n\t\t\t\t\t\t\t\t\t\t\t? ''\n\t\t\t\t\t\t\t\t\t\t\t: totalGain > 0\n\t\t\t\t\t\t\t\t\t\t\t? 'positive-change'\n\t\t\t\t\t\t\t\t\t\t\t: 'negative-change'\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{totalPercentGain}\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</table>\n\t\t\t\t</main>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default FullPortfolio;\n","/Users/evangeloskapantais/Projects/Code/stocks/src/components/PortfolioRow.jsx",[],"/Users/evangeloskapantais/Projects/Code/stocks/src/components/Navbar.jsx",[],"/Users/evangeloskapantais/Projects/Code/stocks/src/components/ApiTimer.jsx",["131"],"/Users/evangeloskapantais/Projects/Code/stocks/src/components/Sidebar.jsx",[],"/Users/evangeloskapantais/Projects/Code/stocks/src/components/Content.jsx",[],"/Users/evangeloskapantais/Projects/Code/stocks/src/components/SidebarTrigger.jsx",[],"/Users/evangeloskapantais/Projects/Code/stocks/src/components/tables/QuoteTable.jsx",[],"/Users/evangeloskapantais/Projects/Code/stocks/src/components/tables/KeyDataTable.jsx",[],{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","severity":1,"message":"137","line":14,"column":5,"nodeType":"138","endLine":14,"endColumn":7,"suggestions":"139"},{"ruleId":"140","severity":1,"message":"141","line":14,"column":9,"nodeType":"142","messageId":"143","endLine":14,"endColumn":18},{"ruleId":"132","replacedBy":"144"},{"ruleId":"134","replacedBy":"145"},{"ruleId":"132","replacedBy":"146"},{"ruleId":"134","replacedBy":"147"},{"ruleId":"136","severity":1,"message":"148","line":100,"column":5,"nodeType":"138","endLine":100,"endColumn":20,"suggestions":"149"},{"ruleId":"132","replacedBy":"150"},{"ruleId":"134","replacedBy":"151"},{"ruleId":"140","severity":1,"message":"152","line":29,"column":8,"nodeType":"142","messageId":"143","endLine":29,"endColumn":25},{"ruleId":"136","severity":1,"message":"153","line":12,"column":5,"nodeType":"138","endLine":12,"endColumn":13,"suggestions":"154"},{"ruleId":"136","severity":1,"message":"153","line":12,"column":5,"nodeType":"138","endLine":12,"endColumn":13,"suggestions":"155"},{"ruleId":"136","severity":1,"message":"156","line":28,"column":5,"nodeType":"138","endLine":28,"endColumn":13,"suggestions":"157"},{"ruleId":"136","severity":1,"message":"158","line":17,"column":5,"nodeType":"138","endLine":17,"endColumn":15,"suggestions":"159"},"no-native-reassign",["160"],"no-negated-in-lhs",["161"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getDbStocks'. Either include it or remove the dependency array.","ArrayExpression",["162"],"no-unused-vars","'container' is assigned a value but never used.","Identifier","unusedVar",["160"],["161"],["160"],["161"],"React Hook useEffect has missing dependencies: 'abortController', 'fetchStockQuote', 'getDbStocks', and 'signal'. Either include them or remove the dependency array.",["163"],["160"],["161"],"'incrementApiCalls' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setDisplay'. Either include it or remove the dependency array.",["164"],["165"],"React Hook useEffect has missing dependencies: 'fetchStockQuote', 'getDbStocks', and 'portfolio'. Either include them or remove the dependency array.",["166"],"React Hook useEffect has a missing dependency: 'timer'. Either include it or remove the dependency array. You can also do a functional update 'setTimer(t => ...)' if you only need 'timer' in the 'setTimer' call.",["167"],"no-global-assign","no-unsafe-negation",{"desc":"168","fix":"169"},{"desc":"170","fix":"171"},{"desc":"172","fix":"173"},{"desc":"172","fix":"174"},{"desc":"175","fix":"176"},{"desc":"177","fix":"178"},"Update the dependencies array to be: [getDbStocks]",{"range":"179","text":"180"},"Update the dependencies array to be: [abortController, display.stock, fetchStockQuote, getDbStocks, signal]",{"range":"181","text":"182"},"Update the dependencies array to be: [setDisplay, stocks]",{"range":"183","text":"184"},{"range":"185","text":"184"},"Update the dependencies array to be: [fetchStockQuote, getDbStocks, portfolio, stocks]",{"range":"186","text":"187"},"Update the dependencies array to be: [apiCalls, timer]",{"range":"188","text":"189"},[406,408],"[getDbStocks]",[2643,2658],"[abortController, display.stock, fetchStockQuote, getDbStocks, signal]",[353,361],"[setDisplay, stocks]",[357,365],[735,743],"[fetchStockQuote, getDbStocks, portfolio, stocks]",[400,410],"[apiCalls, timer]"]